
Buzzer_tiny13.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000003c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000090  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000090  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000000c0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  000000fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000003dd  00000000  00000000  00000134  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000367  00000000  00000000  00000511  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001cf  00000000  00000000  00000878  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000054  00000000  00000000  00000a48  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000246  00000000  00000000  00000a9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000024  00000000  00000000  00000ce2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00000d06  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	09 c0       	rjmp	.+18     	; 0x14 <__ctors_end>
   2:	0e c0       	rjmp	.+28     	; 0x20 <__bad_interrupt>
   4:	0d c0       	rjmp	.+26     	; 0x20 <__bad_interrupt>
   6:	0c c0       	rjmp	.+24     	; 0x20 <__bad_interrupt>
   8:	0b c0       	rjmp	.+22     	; 0x20 <__bad_interrupt>
   a:	0a c0       	rjmp	.+20     	; 0x20 <__bad_interrupt>
   c:	09 c0       	rjmp	.+18     	; 0x20 <__bad_interrupt>
   e:	08 c0       	rjmp	.+16     	; 0x20 <__bad_interrupt>
  10:	07 c0       	rjmp	.+14     	; 0x20 <__bad_interrupt>
  12:	06 c0       	rjmp	.+12     	; 0x20 <__bad_interrupt>

00000014 <__ctors_end>:
  14:	11 24       	eor	r1, r1
  16:	1f be       	out	0x3f, r1	; 63
  18:	cf e9       	ldi	r28, 0x9F	; 159
  1a:	cd bf       	out	0x3d, r28	; 61
  1c:	0a d0       	rcall	.+20     	; 0x32 <main>
  1e:	0c c0       	rjmp	.+24     	; 0x38 <_exit>

00000020 <__bad_interrupt>:
  20:	ef cf       	rjmp	.-34     	; 0x0 <__vectors>

00000022 <setup>:
	}
}

void setup(void)
{
	DDRB |= (1<<3);
  22:	bb 9a       	sbi	0x17, 3	; 23
	DDRB |= (1<<4);
  24:	bc 9a       	sbi	0x17, 4	; 23
  26:	08 95       	ret

00000028 <loop>:
}

void loop(void)
{
	PORTB =  (1<<3);
  28:	88 e0       	ldi	r24, 0x08	; 8
  2a:	88 bb       	out	0x18, r24	; 24
	
	delay_nop(1000);
	
	PORTB =  (1<<4);
  2c:	80 e1       	ldi	r24, 0x10	; 16
  2e:	88 bb       	out	0x18, r24	; 24
  30:	08 95       	ret

00000032 <main>:
}


int main(void)
{
	setup();
  32:	f7 df       	rcall	.-18     	; 0x22 <setup>
	
	while(1)	
	{
	loop();		
  34:	f9 df       	rcall	.-14     	; 0x28 <loop>
  36:	fe cf       	rjmp	.-4      	; 0x34 <main+0x2>

00000038 <_exit>:
  38:	f8 94       	cli

0000003a <__stop_program>:
  3a:	ff cf       	rjmp	.-2      	; 0x3a <__stop_program>
